version: '3'
services:
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: auth/Dockerfile
      target: base
    ports:
      - '5000'
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      POSTGRES_URL: ${POSTGRES_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXP_ACCESS: ${JWT_EXP_ACCESS}
      JWT_EXP_REFRESH: ${JWT_EXP_REFRESH}
      JAEGER_AGENT_HOST: ${JAEGER_AGENT_HOST}
      JAEGER_AGENT_PORT: ${JAEGER_AGENT_PORT}
      YANDEX_CLIENT_ID: ${YANDEX_CLIENT_ID}
      YANDEX_CLIENT_SECRET: ${YANDEX_CLIENT_SECRET}
      VK_CLIENT_ID: ${VK_CLIENT_ID}
      VK_CLIENT_SECRET: ${VK_CLIENT_SECRET}
    volumes:
      - ./auth/static:/auth/static
      - ./auth/migrations:/auth/migrations
    depends_on:
      - redis
      - postgres

  app:
    container_name: app
    build:
      context: .
      dockerfile: app/Dockerfile
    ports:
      - '8000'
    environment:
      REDIS_URL: ${REDIS_URL}
      ES_URL: ${ES_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      GRPC_HOST: ${GRPC_HOST}
      GRPC_PORT: ${GRPC_PORT}
    depends_on:
      - elasticsearch
      - redis

  postgres:
    container_name: postgres
    image: postgres:13
    ports:
      - '5234'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always

  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - '6379'

  elasticsearch:
    image: elasticsearch:7.17.4
    container_name: elasticsearch
    ports:
      - '9200'
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  nginx:
    image: nginx:1.21.6
    container_name: nginx
    volumes:
      - ./auth/static:/auth/static
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - '80:80'
    depends_on:
      - app
      - auth

  jaeger:
    image: jaegertracing/all-in-one:1.37
    container_name: jaeger
    ports:
      - '6831:6831/udp'
      - '16686:16686'

  grpc:
    container_name: grpc
    build:
      context: .
      dockerfile: auth_grpc/Dockerfile
    environment:
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      GRPC_PORT: ${GRPC_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      POSTGRES_URL: ${POSTGRES_URL}
    ports:
      - '50051'
